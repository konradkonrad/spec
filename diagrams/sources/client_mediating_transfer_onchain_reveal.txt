participant Initiator
participant Mediator1
participant Mediator2
participant Target
participant SecretRegistryContract

Initiator -> Mediator1: LockedTransfer\n(HTL, BP,\ninitiator_address,\ntarget_address)
Note over Initiator, Mediator1: Delivered + Processed messages\nleft out for brevity
Mediator1 -> Mediator2: LockedTransfer \n (HTL, BP,\ninitiator_address,\ntarget_address)
Mediator2 -> Target: LockedTransfer \n (HTL, BP,\ninitiator_address,\ntarget_address)
Target -> Initiator: SecretRequest \n (amount,\nsecrethash,\nsignature)
Initiator -> Target: RevealSecret \n (secret, signature)
Target -> Mediator2: RevealSecret \n (secret, signature)

Note over Mediator2, Target: Bad behaviour\nMediator2 does not send the BP\nto Target


Note over Target: waits until lock \n is about to expire
Note over Target: CHOICE \n lose the transfer \n or go ON CHAIN
Target -> SecretRegistryContract: registerSecret(secret)
Note over Initiator, SecretRegistryContract: Secret can be used by all nodes to UNLOCK the transfer after settling the channels \n SecretRegistry.getSecretRevealBlockHeight(secrethash)
Mediator2 --> Mediator1: RevealSecret \n (secret, signature)
Mediator1 --> Mediator2: Unlock BP_M1
Mediator1 --> Initiator: RevealSecret \n (secret, signature)
Initiator --> Mediator1: Unlock BP_I
